---
layout: post
title:  "理解 RSA 算法"
categories: Algorithm
---

-------------

# Public-key Cryptography 简介

[Public-key cryptography](https://en.wikipedia.org/wiki/Public-key_cryptography)
(公开密钥加密) 又称 asymmetric cryptography (非对称加密)，即存在两把不同的密钥，分别称为公钥 PU 和私钥 PR，公钥通常用来加密明文 M，只有私钥才能解密公钥加密后的密文 C，如果 E 和 D 分别表示加密和解密算法，那么有：

~~~
C = E(PU, M)
M = D(PR, C)
~~~

~~~
+----------------+-----------------------+-------------------+--------------+
|   Algorithm    | Encryption/Decryption | Digital Signature | Key Exchange |
+----------------+-----------------------+-------------------+--------------+
|      RSA       |          Yes          |        Yes        |      Yes     |
+----------------+-----------------------+-------------------+--------------+
| Deffie-Hellman |          No           |        No         |      Yes     |
+----------------+-----------------------+-------------------+--------------+
| Elliptic Curve |          Yes          |        Yes        |      Yes     |
+----------------+-----------------------+-------------------+--------------+
|      DSS       |          No           |        Yes        |      No      |
+----------------+-----------------------+-------------------+--------------+
~~~

-------------

# 数论知识

理解 RSA 算法前，先介绍一些必要的数论领域知识，分别是离散对数问题和一个求模公式。


-------------

# RSA 算法原理

~~~
+-------------------------------------------------------------------------------+
|                                 Key Generation                                |
|                                                                               |
|     Select p, q                               p and q both prime, p != q      |
|     Calculate n = p * q                                                       |
|     Calculate o(n) = (p - 1) * (q - 1)                                        |
|     Select integer e                          e is relatively primte to o(n)  |
|     Calculate d                               d * e  mod n = 1                |
|     Public key                                PU = {e, n}                     |
|     Private key                               PR = {d, n}                     |
+-------------------------------------------------------------------------------+
+-------------------------------------------------------------------------------+
|                                  Encryption                                   |
|                                                                               |
|     Plaintext M                               M < n                           |
|     Ciphertext C                              C = M^e mod n                   |
+-------------------------------------------------------------------------------+
+-------------------------------------------------------------------------------+
|                                  Decryption                                   |
|                                                                               |
|     Ciphertext C                              C                               |
|     Plaintext M                               M = C^d mod n                   |
+-------------------------------------------------------------------------------+
~~~
